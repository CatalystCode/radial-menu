<UserControl
    x:Class="RadialMenuControl.UserControl.PieSlice"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:userControl="using:RadialMenuControl.UserControl"
    mc:Ignorable="d"
    d:DesignHeight="300"
    d:DesignWidth="300">
    <UserControl.Resources>
        <ResourceDictionary Source="../Themes/Styles.xaml"/>
    </UserControl.Resources>

    <Grid>
        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup>
                <VisualState x:Name="InnerNormal">
                    <Storyboard SpeedRatio="2" x:Name="InnerNormalStoryBoard">
                        <ColorAnimation To="{Binding Path=InnerNormalColor}" Duration="0:00:00.2" Storyboard.TargetName="InnerPieSlicePath" Storyboard.TargetProperty="(Fill).(SolidColorBrush.Color)" />
                    </Storyboard>
                </VisualState>
                <VisualState x:Name="InnerHover">
                    <Storyboard SpeedRatio="2">
                        <ColorAnimation To="{Binding Path=InnerHoverColor}" Duration="0:00:00.2" Storyboard.TargetName="InnerPieSlicePath" Storyboard.TargetProperty="(Fill).(SolidColorBrush.Color)" />
                    </Storyboard>
                </VisualState>
                <VisualState x:Name="InnerPressed">
                    <Storyboard SpeedRatio="2">
                        <ColorAnimation To="{Binding Path=InnerTappedColor}" Duration="0:00:00.2" Storyboard.TargetName="InnerPieSlicePath" Storyboard.TargetProperty="(Fill).(SolidColorBrush.Color)" />
                    </Storyboard>
                </VisualState>
                <VisualState x:Name="InnerReleased">
                    <Storyboard SpeedRatio="2" x:Name="InnerReleasedStoryBoard">
                        <ColorAnimation To="{Binding Path=InnerReleasedColor}" Duration="0:00:00.2" Storyboard.TargetName="InnerPieSlicePath" Storyboard.TargetProperty="(Fill).(SolidColorBrush.Color)" />
                    </Storyboard>
                </VisualState>
            </VisualStateGroup>
            <VisualStateGroup x:Name="OuterStates">
                <VisualState x:Name="OuterNormal">
                    <Storyboard SpeedRatio="2">
                        <ColorAnimation To="{Binding Path=OuterNormalColor}" Duration="0:00:00.2" Storyboard.TargetName="OuterPieSlicePath" Storyboard.TargetProperty="(Fill).(SolidColorBrush.Color)" />
                    </Storyboard>
                </VisualState>
                <VisualState x:Name="OuterHover">
                    <Storyboard SpeedRatio="2">
                        <ColorAnimation To="{Binding Path=OuterHoverColor}" Duration="0:00:00.2" Storyboard.TargetName="OuterPieSlicePath" Storyboard.TargetProperty="(Fill).(SolidColorBrush.Color)" />
                    </Storyboard>
                </VisualState>
                <VisualState x:Name="OuterPressed">
                    <Storyboard SpeedRatio="2">
                        <ColorAnimation To="{Binding Path=OuterTappedColor}" Duration="0:00:00.2" Storyboard.TargetName="OuterPieSlicePath" Storyboard.TargetProperty="(Fill).(SolidColorBrush.Color)" />
                    </Storyboard>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>

        <userControl:OuterPieSlicePath x:Name="OuterPieSlicePath" />

        <userControl:InnerPieSlicePath x:Name="InnerPieSlicePath"            
            PointerPressed="innerPieSlicePath_PointerPressed"
            PointerReleased="innerPieSlicePath_PointerReleased"
            PointerEntered="innerPieSlicePath_PointerEntered"
            PointerExited="innerPieSlicePath_PointerExited">
        </userControl:InnerPieSlicePath>
        <Path x:Name="IndicationArcPath"  Canvas.ZIndex="100" Canvas.Top="0" Canvas.Left="0">
            <Path.Data>
                <PathGeometry>
                    <PathGeometry.Figures>
                        <PathFigureCollection>
                            <PathFigure x:Name="IndicationArcPathFigure">
                                <PathFigure.Segments>
                                    <PathSegmentCollection>
                                        <ArcSegment x:Name="IndicationArc" SweepDirection="Clockwise" ></ArcSegment>
                                    </PathSegmentCollection>
                                </PathFigure.Segments>
                            </PathFigure>
                        </PathFigureCollection>
                    </PathGeometry.Figures>
                </PathGeometry>
            </Path.Data>
        </Path>
        <Popup x:Name="OuterAccessKeyPopup">
            <Popup.RenderTransform>
                <TranslateTransform x:Name="OuterAccessKeyPopupTranslate"></TranslateTransform>
            </Popup.RenderTransform>
            <Border BorderBrush="{StaticResource ApplicationForegroundThemeBrush}" 
                Background="{StaticResource ApplicationPageBackgroundThemeBrush}"
                BorderThickness="2" Width="30" Height="30" Margin="-30, -30">
                <StackPanel HorizontalAlignment="Center" VerticalAlignment="Center">
                    <TextBlock Text="{Binding OuterAccessKey}" FontSize="12" HorizontalAlignment="Center" />
                </StackPanel>
            </Border>
        </Popup>

        <Grid x:Name="TextLabelGrid">
            <Grid.RenderTransform>
                <TransformGroup>
                    <TranslateTransform x:Name="IconTranslate" />
                </TransformGroup>
            </Grid.RenderTransform>

            <Popup x:Name="InnerAccessKeyPopup">
                <Border BorderBrush="{StaticResource ApplicationForegroundThemeBrush}" 
                Background="{StaticResource ApplicationPageBackgroundThemeBrush}"
                BorderThickness="2" Width="30" Height="30" Margin="-30, -30">
                    <StackPanel HorizontalAlignment="Center" VerticalAlignment="Center">
                        <TextBlock Text="{Binding InnerAccessKey}" FontSize="12" HorizontalAlignment="Center" />
                    </StackPanel>
                </Border>
            </Popup>

            <TextBlock
                x:Name="IconTextElement"
                HorizontalAlignment="Center"
                VerticalAlignment="Center"
                FontSize="{Binding IconSize}"
                Text="{Binding Icon}"
                Foreground="{Binding IconForegroundBrush}"
                IsHitTestVisible="False"
                Visibility="{Binding TextBlockVisibility}"
                Margin="0, -25, 0, 0">
            </TextBlock>
            <Image
                x:Name="IconImageElement"
                HorizontalAlignment="Center"
                VerticalAlignment="Center"
                Source="{Binding IconImage}"
                Width="{Binding IconImageSideLength}"
                Height="{Binding IconImageSideLength}"
                IsHitTestVisible="False"
                Margin="0, -25, 0, 0">
            </Image>
            <TextBlock
                x:Name="LabelTextElement"
                HorizontalAlignment="Center"
                VerticalAlignment="Center"
                TextAlignment="Center"
                Foreground="{Binding LabelColor}"
                FontSize="{Binding LabelSize}"
                Text="{Binding Label}"
                IsHitTestVisible="False"
                Margin="0, 25, 0, 0">
            </TextBlock>

           
        </Grid>
        <Viewbox Height="15" Width="15" RenderTransformOrigin="0.5, 0.5" IsHitTestVisible="False">
            <Path Fill="White"
             VerticalAlignment="Center"         
                  Data="M1408 1216q0 26-19 45t-45 19h-896q-26 0-45-19t-19-45 19-45l448-448q19-19 45-19t45 19l448 448q19 19 19 45z">
            </Path>
            <Viewbox.RenderTransform>
                <TransformGroup>
                    <RotateTransform x:Name="CaretRotateTransform"/>
                    <TranslateTransform x:Name="CaretTranslate" />
                </TransformGroup>
            </Viewbox.RenderTransform>
        </Viewbox>
    </Grid>
</UserControl>
