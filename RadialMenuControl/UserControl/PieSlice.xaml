<UserControl
    x:Class="RadialMenuControl.UserControl.PieSlice"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:RadialMenuControl.UserControl"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:radialMenuControl="using:RadialMenuControl"
    xmlns:userControl="using:RadialMenuControl.UserControl"
    mc:Ignorable="d"
    d:DesignHeight="300"
    d:DesignWidth="300">

    <Grid x:Name="layoutRoot">
        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup x:Name="InnerStates">
                <VisualState x:Name="InnerNormal">
                    <Storyboard SpeedRatio="2">
                        <ColorAnimation To="{Binding Path=InnerNormalColor}" Duration="0:00:00.2" Storyboard.TargetName="innerPieSlicePath" Storyboard.TargetProperty="(Fill).(SolidColorBrush.Color)" />
                    </Storyboard>
                </VisualState>
                <VisualState x:Name="InnerHover">
                    <Storyboard SpeedRatio="2">
                        <ColorAnimation To="{Binding Path=InnerHoverColor}" Duration="0:00:00.2" Storyboard.TargetName="innerPieSlicePath" Storyboard.TargetProperty="(Fill).(SolidColorBrush.Color)" />
                    </Storyboard>
                </VisualState>
                <VisualState x:Name="InnerPressed">
                    <Storyboard SpeedRatio="2">
                        <ColorAnimation To="{Binding Path=InnerTappedColor}" Duration="0:00:00.2" Storyboard.TargetName="innerPieSlicePath" Storyboard.TargetProperty="(Fill).(SolidColorBrush.Color)" />
                    </Storyboard>
                </VisualState>
                <VisualState x:Name="InnerReleased">
                    <Storyboard SpeedRatio="2">
                        <ColorAnimation To="{Binding Path=InnerReleasedColor}" Duration="0:00:00.2" Storyboard.TargetName="innerPieSlicePath" Storyboard.TargetProperty="(Fill).(SolidColorBrush.Color)" />
                    </Storyboard>
                </VisualState>
            </VisualStateGroup>
            <VisualStateGroup x:Name="OuterStates">
                <VisualState x:Name="OuterNormal">
                    <Storyboard SpeedRatio="2">
                        <ColorAnimation To="{Binding Path=OuterNormalColor}" Duration="0:00:00.2" Storyboard.TargetName="outerPieSlicePath" Storyboard.TargetProperty="(Fill).(SolidColorBrush.Color)" />
                    </Storyboard>
                </VisualState>
                <VisualState x:Name="OuterHover">
                    <Storyboard SpeedRatio="2">
                        <ColorAnimation To="{Binding Path=OuterHoverColor}" Duration="0:00:00.2" Storyboard.TargetName="outerPieSlicePath" Storyboard.TargetProperty="(Fill).(SolidColorBrush.Color)" />
                    </Storyboard>
                </VisualState>
                <VisualState x:Name="OuterPressed">
                    <Storyboard SpeedRatio="2">
                        <ColorAnimation To="{Binding Path=OuterTappedColor}" Duration="0:00:00.2" Storyboard.TargetName="outerPieSlicePath" Storyboard.TargetProperty="(Fill).(SolidColorBrush.Color)" />
                    </Storyboard>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>

        <userControl:PieSlicePath x:Name="outerPieSlicePath"
            StrokeThickness="10"
            Thickness="18">
        </userControl:PieSlicePath>

        <userControl:PieSlicePath x:Name="innerPieSlicePath"
            StrokeThickness="10"
            PointerPressed="innerPieSlicePath_PointerPressed"
            PointerReleased="innerPieSlicePath_PointerReleased"
            PointerEntered="innerPieSlicePath_PointerEntered"
            PointerExited="innerPieSlicePath_PointerExited"
            Thickness="105">
        </userControl:PieSlicePath>

        <Grid>
            <Grid.RenderTransform>
                <TransformGroup>
                    <TranslateTransform x:Name="iconTranslate" />
                </TransformGroup>
            </Grid.RenderTransform>
            <TextBlock
                x:Name="iconTextBlock"
                HorizontalAlignment="Center"
                VerticalAlignment="Center"
                FontSize="{Binding IconSize}"
                Text="{Binding Icon}"
                IsHitTestVisible="False"
                Visibility="{Binding TextBlockVisibility}"
                Margin="0, -25, 0, 0">
            </TextBlock>
            <Image
                x:Name="iconImage"
                HorizontalAlignment="Center"
                VerticalAlignment="Center"
                Source="{Binding IconImage}"
                Width="{Binding IconImageSideLength}"
                Height="{Binding IconImageSideLength}"
                IsHitTestVisible="False"
                Margin="0, -25, 0, 0">
            </Image>
            <TextBlock
                x:Name="labelTextBlock"
                HorizontalAlignment="Center"
                VerticalAlignment="Center"
                FontSize="{Binding LabelSize}"
                Text="{Binding Label}"
                IsHitTestVisible="False"
                Margin="0, 25, 0, 0">
            </TextBlock>
        </Grid>
        <TextBlock
                x:Name="caretTextBlock"
                HorizontalAlignment="Center"
                VerticalAlignment="Center"
                Foreground="White"
                FontSize="12"
                Text="▲"
                IsHitTestVisible="False"
                Margin="7, 12, 0, 0">
            <TextBlock.RenderTransform>
                <TransformGroup>
                    <RotateTransform x:Name="caretRotateTransform"/>
                    <TranslateTransform x:Name="caretTranslate" />
                </TransformGroup>
            </TextBlock.RenderTransform>
        </TextBlock>
    </Grid>
</UserControl>
